{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15560\viewh12800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 Cubesicle
\b0  
\b Code
\b0 \
\
This is the code for my recent studio project Cubesicle, an internet-connected cube that functions both as furniture and as a component in a creative partitioning system. Visit {\field{\*\fldinst{HYPERLINK "http://www.cubesicle.com"}}{\fldrslt www.cubesicle.com}} to learn about the process and concept.\
\
There are two elements to the existing code\'85 it may still need to be cleaned up a bit but the basics are there.\
\

\b -WiflyGmail.ino
\b0  \
This was basically a mashed up version of some code meant to push data to Cosm (formally Pachube) but it has been repurposed a bit. I'm working on an OAuth version that will allow a user to create a session so that you don't have to store your gmail info in the actual Arduino code. Right now you have to pass that information through to the php script. \
\
There's also some funkiness in the code\'85 an infinite while loop keeps the wifly module from disconnecting once the buffer fills up. This needs to happen in order for it to stay connected long enough to read a character being returned by the php script. There may be other ways around this but for now this is what worked.\
\
Make sure the correct Wifi information is added to the 
\b credentials.h
\b0  file. You can ignore the Pachube API key information, it's not being used.\
\
-
\b WiflyGmail.php
\b0 \
This IMAP code is practically given to you by Google\'85 i've added a few things and most importantly created a stupid-simple "memory" for it to check it's history. The php script checks your gmail for the unread count. It then compares it to a number in the text file. If the unread number exceeds the number in the text file, it updates the text file and returns a parseable character that's easily read by the arduino. If the count is the same as the text file, nothing happens and a different character is returned. \
\
This was originally being used by an unmoderated gmail account and so these are pretty much the only possible outcomes. If for some reason the gmail count is lower than in the text file (due to moderation), it resets the count at the actual total. Hope this makes sense. It caps out at a count of 72 or 73 and then stops working. It wasn't an issue for me so I didn't rewrite that piece of the script. I'm new to php so it's probably still a bit crude.}